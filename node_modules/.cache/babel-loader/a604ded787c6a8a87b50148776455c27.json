{"ast":null,"code":"var _jsxFileName = \"/Users/nickabramowicz/codefellows/401/resty/src/components/form/Form.js\";\nimport React from 'react';\nimport './form.scss';\nimport superagent from 'superagent'; // In JS we instantiate constructors using new Form(), in JSX you use <Form />\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props); // on instantiation, we activate the React.Component abilities\n    // component state is any js data we want our component to care about\n\n    this.addUrlandMethod = () => {\n      // Think of setState as a PUT, it updates state object deefined in constructor\n      this.setState({\n        apiUrl: [this.state.input, ...this.state.apiUrl],\n        apiMethod: [this.state.methodValue, ...this.state.apiMethod],\n        methodClass: [this.state.classValue, ...this.state.methodClass]\n      });\n    };\n\n    this.addUrlandMethod = () => {\n      this.setState({\n        apiUrl: [this.state.input, ...this.state.apiurl],\n        apiMethod: [this.state.methodValue, ...this.state.apiMethod],\n        methodClass: [this.state.classValue, ...this.state.methodClass]\n      });\n    };\n\n    this.handleMethodChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        methodValue: e.target.value\n      });\n    };\n\n    this.methodChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        methodValue: e.target.value\n      });\n      this.setState({\n        classValue: `${e.target.value}Button`\n      }); // maybe a callback, maybe a refactor.\n\n      if (e.target.value === 'get') {\n        this.setState({\n          formGet: 'getButton',\n          formPost: 'plain',\n          formPut: 'plain',\n          formDelete: 'plain'\n        });\n      } else if (e.target.value === 'post') {\n        this.setState({\n          formGet: 'plain',\n          formPost: 'postButton',\n          formPut: 'plain',\n          formDelete: 'plain'\n        });\n      } else if (e.target.value === 'put') {\n        this.setState({\n          formGet: 'plain',\n          formPost: 'plain',\n          formPut: 'putButton',\n          formDelete: 'plain'\n        });\n      } else if (e.target.value === 'delete') {\n        this.setState({\n          formGet: 'plain',\n          formPost: 'plain',\n          formPut: 'plain',\n          formDelete: 'deleteButton'\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n    };\n\n    this.handleRequestChange = e => {\n      this.setState({\n        requestInput: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await superagent.get(this.state.apiUrl[0]);\n      let data = response.body;\n      let headerData = response.header;\n      this.props.updateResults(data, headerData);\n      this.setState({\n        input: ''\n      });\n    };\n\n    this.state = {\n      apiMethod: [],\n      methodValue: 'get',\n      classValue: 'getButton',\n      input: '',\n      requestInput: '',\n      apiUrl: ['https://pokeapi.co/api/v2/pokemon/'],\n      methodClass: [],\n      formGet: 'getButton',\n      formPost: 'plain',\n      formPut: 'plain',\n      formDelete: 'plain'\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // This is what React refers to as JSX\n      // Curly brackets mean js not jsx\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"App-form\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Enter Rest API URL: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"urlEntry\",\n              onChange: this.handleChange,\n              type: \"text\",\n              value: this.state.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Choice of Method: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.state.formGet,\n              value: \"get\",\n              onClick: this.methodChange,\n              children: \"GET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.state.formPost,\n              value: \"post\",\n              onClick: this.methodChange,\n              children: \"POST\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.state.formPut,\n              value: \"put\",\n              onClick: this.methodChange,\n              children: \"PUT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.state.formDelete,\n              value: \"delete\",\n              onClick: this.methodChange,\n              children: \"DELETE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Request Body: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"request-field\",\n                value: this.state.requestInput,\n                onChange: this.handleRequestChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"\",\n              type: \"submit\",\n              value: \"Go!\",\n              onClick: this.addUrlandMethod\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-frame\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"history-title\",\n            children: \"Recent Routes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), this.state.apiUrl.map((url, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.state.methodClass[idx],\n              children: this.state.apiMethod[idx]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 62\n            }, this), url]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 58\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/nickabramowicz/codefellows/401/resty/src/components/form/Form.js"],"names":["React","superagent","Form","Component","constructor","props","addUrlandMethod","setState","apiUrl","state","input","apiMethod","methodValue","methodClass","classValue","apiurl","handleMethodChange","e","console","log","target","value","methodChange","formGet","formPost","formPut","formDelete","handleChange","preventDefault","handleRequestChange","requestInput","handleSubmit","response","get","data","body","headerData","header","updateResults","render","map","url","idx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './form.scss'\nimport superagent from 'superagent';\n\n// In JS we instantiate constructors using new Form(), in JSX you use <Form />\nclass Form extends React.Component {\n    constructor(props) {\n        super(props); // on instantiation, we activate the React.Component abilities\n\n        // component state is any js data we want our component to care about\n        this.state = {\n            apiMethod: [],\n            methodValue: 'get',\n            classValue: 'getButton',\n            input: '',\n            requestInput: '',\n            apiUrl: ['https://pokeapi.co/api/v2/pokemon/'],\n            methodClass: [],\n            formGet: 'getButton',\n            formPost: 'plain',\n            formPut: 'plain',\n            formDelete: 'plain',\n        }\n    }\n\n    addUrlandMethod = () => {\n        // Think of setState as a PUT, it updates state object deefined in constructor\n        this.setState({\n            apiUrl: [this.state.input, ...this.state.apiUrl],\n            apiMethod: [this.state.methodValue, ...this.state.apiMethod],\n            methodClass: [this.state.classValue, ...this.state.methodClass],\n        })\n    }\n\n    addUrlandMethod = () => {\n        this.setState({\n            apiUrl: [this.state.input, ...this.state.apiurl],\n            apiMethod: [this.state.methodValue, ...this.state.apiMethod],\n            methodClass: [this.state.classValue, ...this.state.methodClass],\n        })\n    }\n\n    // The 'e' means the method is used as an event handler. 'e' has all data recorded when event fired\n    handleMethodChange = (e) => {\n        console.log(e.target.value);\n        this.setState({ methodValue: e.target.value });\n    }\n\n    methodChange = (e) => {\n        console.log(e.target.value);\n        this.setState({ methodValue: e.target.value });\n        this.setState({ classValue: `${e.target.value}Button` });\n\n        // maybe a callback, maybe a refactor.\n        if (e.target.value === 'get') {\n            this.setState({\n                formGet: 'getButton',\n                formPost: 'plain',\n                formPut: 'plain',\n                formDelete: 'plain',\n            });\n        } else if (e.target.value === 'post') {\n            this.setState({\n                formGet: 'plain',\n                formPost: 'postButton',\n                formPut: 'plain',\n                formDelete: 'plain',\n            });\n        } else if (e.target.value === 'put') {\n            this.setState({\n                formGet: 'plain',\n                formPost: 'plain',\n                formPut: 'putButton',\n                formDelete: 'plain',\n            });\n        } else if (e.target.value === 'delete') {\n            this.setState({\n                formGet: 'plain',\n                formPost: 'plain',\n                formPut: 'plain',\n                formDelete: 'deleteButton',\n            });\n        }\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n    }\n\n    handleRequestChange = (e) => {\n        this.setState({ requestInput: e.target.value });\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const response = await superagent.get(this.state.apiUrl[0]);\n\n        let data = response.body;\n        let headerData = response.header;\n\n        this.props.updateResults(data, headerData);\n        this.setState({ input: '' });\n    }\n\n    render() {\n        return (\n            // This is what React refers to as JSX\n            // Curly brackets mean js not jsx\n            <div>\n                <form className=\"App-form\" onSubmit={this.handleSubmit}>\n                    <label>Enter Rest API URL: <br></br>\n                        <input className=\"urlEntry\" onChange={this.handleChange} type='text' value={this.state.input} />\n                    </label>\n                    <br></br>\n                    <label>Choice of Method: <br />\n                        <button className={this.state.formGet} value=\"get\" onClick={this.methodChange}>GET</button>\n                        <button className={this.state.formPost} value=\"post\" onClick={this.methodChange}>POST</button>\n                        <button className={this.state.formPut} value=\"put\" onClick={this.methodChange}>PUT</button>\n                        <button className={this.state.formDelete} value=\"delete\" onClick={this.methodChange}>DELETE</button>\n                        <label>Request Body: <br />\n                            <textarea className=\"request-field\" value={this.state.requestInput} onChange={this.handleRequestChange} />\n                        </label>\n                        <input className=\"\" type=\"submit\" value=\"Go!\" onClick={this.addUrlandMethod} />\n                    </label>\n                </form>\n                <div className=\"route-frame\">\n                    <h3 className=\"history-title\">Recent Routes</h3>\n                    {this.state.apiUrl.map((url, idx) => <li><button className={this.state.methodClass[idx]}>{this.state.apiMethod[idx]}</button>{url}</li>)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}