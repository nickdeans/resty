{"ast":null,"code":"var _jsxFileName = \"/Users/nickabramowicz/codefellows/401/resty/src/components/form/Form.js\";\nimport React from 'react';\nimport './form.scss'; // In JS we instantiate constructors using new Form(), in JSX you use <Form />\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends React.Component {\n  constructor() {\n    super(); // on instantiation, we activate the React.Component abilities\n    // component state is any js data we want our component to care about\n\n    this.addUrlandMethod = () => {\n      // Think of setState as a PUT, it updates state object deefined in constructor\n      this.setState({\n        apiUrl: [this.state.input, ...this.state.apiUrl],\n        apiMethod: [this.state.methodValue, ...this.state.apiMethod],\n        methodClass: [this.state.classValue, ...this.state.methodClass]\n      });\n    };\n\n    this.handleMethodChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        methodValue: e.target.value\n      });\n    };\n\n    this.methodChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        methodValue: e.target.value\n      });\n      this.setState({\n        classValue: `${e.target.value}Button`\n      }); // maybe a callback, maybe a refactor.\n\n      if (e.target.value === 'get') {\n        this.setState({\n          formGet: 'getButton',\n          formPost: 'plain',\n          formPut: 'plain',\n          formDelete: 'plain'\n        });\n      } else if (e.target.value === 'post') {\n        this.setState({\n          formGet: 'plain',\n          formPost: 'postButton',\n          formPut: 'plain',\n          formDelete: 'plain'\n        });\n      } else if (e.target.value === 'put') {\n        this.setState({\n          formGet: 'plain',\n          formPost: 'plain',\n          formPut: 'putButton',\n          formDelete: 'plain'\n        });\n      } else if (e.target.value === 'delete') {\n        this.setState({\n          formGet: 'plain',\n          formPost: 'plain',\n          formPut: 'plain',\n          formDelete: 'deleteButton'\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n\n    this.state = {\n      apiMethod: [],\n      apiUrl: [],\n      methodClass: [],\n      formGet: 'plain',\n      formPost: 'plain',\n      formPut: 'plain',\n      formDelete: 'plain'\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // This is what React refers to as JSX\n      // Curly brackets mean js not jsx\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"App-form\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Enter Rest API URL: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"urlEntry\",\n              onChange: this.handleChange,\n              type: \"text\",\n              value: this.state.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Choice of Method: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.state.formGet,\n              value: \"get\",\n              onClick: this.methodChange,\n              children: \"GET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.state.formPost,\n              value: \"post\",\n              onClick: this.methodChange,\n              children: \"POST\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.state.formPut,\n              value: \"put\",\n              onClick: this.methodChange,\n              children: \"PUT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.state.formDelete,\n              value: \"delete\",\n              onClick: this.methodChange,\n              children: \"DELETE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"plain button\",\n              type: \"submit\",\n              value: \"Go\",\n              onClick: this.addUrlandMethod\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-frame\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"history-title\",\n            children: \"Recent Routes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), this.state.apiUrl.map((url, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.state.methodClass[idx],\n              children: this.state.apiMethod[idx]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 62\n            }, this), url]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 58\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/nickabramowicz/codefellows/401/resty/src/components/form/Form.js"],"names":["React","Form","Component","constructor","addUrlandMethod","setState","apiUrl","state","input","apiMethod","methodValue","methodClass","classValue","handleMethodChange","e","console","log","target","value","methodChange","formGet","formPost","formPut","formDelete","handleChange","preventDefault","handleSubmit","render","map","url","idx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './form.scss'\n\n// In JS we instantiate constructors using new Form(), in JSX you use <Form />\nclass Form extends React.Component {\n    constructor() {\n        super(); // on instantiation, we activate the React.Component abilities\n\n        // component state is any js data we want our component to care about\n        this.state = {\n            apiMethod: [],\n            apiUrl: [],\n            methodClass: [],\n            formGet: 'plain',\n            formPost: 'plain',\n            formPut: 'plain',\n            formDelete: 'plain',\n        }\n    }\n\n    addUrlandMethod = () => {\n        // Think of setState as a PUT, it updates state object deefined in constructor\n        this.setState({\n            apiUrl: [this.state.input, ...this.state.apiUrl],\n            apiMethod: [this.state.methodValue, ...this.state.apiMethod],\n            methodClass: [this.state.classValue, ...this.state.methodClass],\n        })\n    }\n\n    // The 'e' means the method is used as an event handler. 'e' has all data recorded when event fired\n    handleMethodChange = (e) => {\n        console.log(e.target.value);\n        this.setState({ methodValue: e.target.value });\n    }\n\n    methodChange = (e) => {\n        console.log(e.target.value);\n        this.setState({ methodValue: e.target.value });\n        this.setState({ classValue: `${e.target.value}Button` });\n    \n        // maybe a callback, maybe a refactor.\n        if (e.target.value === 'get') {\n          this.setState({\n            formGet: 'getButton',\n            formPost: 'plain',\n            formPut: 'plain',\n            formDelete: 'plain',\n          });\n        } else if (e.target.value === 'post') {\n          this.setState({\n            formGet: 'plain',\n            formPost: 'postButton',\n            formPut: 'plain',\n            formDelete: 'plain',\n          });\n        } else if (e.target.value === 'put') {\n          this.setState({\n            formGet: 'plain',\n            formPost: 'plain',\n            formPut: 'putButton',\n            formDelete: 'plain',\n          });\n        } else if (e.target.value === 'delete') {\n          this.setState({\n            formGet: 'plain',\n            formPost: 'plain',\n            formPut: 'plain',\n            formDelete: 'deleteButton',\n          });\n        }\n      }\n\n    handleChange = (e) => {\n        e.preventDefault();\n    }\n\n    handleSubmit= (e) => {\n        e.preventDefault();\n    }\n    \n    render() {\n        return (\n            // This is what React refers to as JSX\n            // Curly brackets mean js not jsx\n            <div>\n                <form className=\"App-form\" onSubmit={this.handleSubmit}>\n                    <label>Enter Rest API URL: <br></br>\n                        <input className=\"urlEntry\" onChange={this.handleChange} type ='text' value={this.state.input} />\n                    </label>\n                    <br></br>\n                    <label>Choice of Method: <br/>\n                        <button className={this.state.formGet} value=\"get\" onClick={this.methodChange}>GET</button>\n                        <button className={this.state.formPost} value=\"post\" onClick={this.methodChange}>POST</button>\n                        <button className={this.state.formPut} value=\"put\" onClick={this.methodChange}>PUT</button>\n                        <button className={this.state.formDelete} value=\"delete\" onClick={this.methodChange}>DELETE</button>\n                        <input className=\"plain button\" type=\"submit\" value=\"Go\" onClick={this.addUrlandMethod} />\n                    </label>\n                </form>\n                <div className=\"history-frame\">\n                    <h3 className=\"history-title\">Recent Routes</h3>\n                    {this.state.apiUrl.map((url, idx) => <li><button className={this.state.methodClass[idx]}>{this.state.apiMethod[idx]}</button>{url}</li>)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}